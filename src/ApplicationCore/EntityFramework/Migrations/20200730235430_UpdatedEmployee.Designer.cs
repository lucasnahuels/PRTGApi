// <auto-generated />
using System;
using ApplicationCore.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ApplicationCore.EntityFramework.Migrations
{
    [DbContext(typeof(PrtgDbContext))]
    [Migration("20200730235430_UpdatedEmployee")]
    partial class UpdatedEmployee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ApplicationCore.Models.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BlackAndWhiteLimitSet")
                        .HasColumnType("integer");

                    b.Property<float>("BlackAndWhitePrice")
                        .HasColumnType("real");

                    b.Property<int>("ColorLimitSet")
                        .HasColumnType("integer");

                    b.Property<float>("ColorPrice")
                        .HasColumnType("real");

                    b.Property<int?>("DeviceObjId")
                        .HasColumnType("integer");

                    b.Property<int>("Month")
                        .HasColumnType("integer");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<float>("SurplusBlackAndWhitePrice")
                        .HasColumnType("real");

                    b.Property<float>("SurplusColorPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DeviceObjId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("ApplicationCore.Models.Device", b =>
                {
                    b.Property<int>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("ObjId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("ApplicationCore.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ApplicationCore.Models.Owner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("ApplicationCore.Models.Reports.DailyContadoresDataDevices", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BlackAndWhiteCopies")
                        .HasColumnType("integer");

                    b.Property<int>("ColorCopies")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeviceObjId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeviceObjId");

                    b.ToTable("DailyContadores");
                });

            modelBuilder.Entity("ApplicationCore.Models.Reports.DailyTonersDataDevices", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BlackTonersUsed")
                        .HasColumnType("integer");

                    b.Property<int>("CyanTonersUsed")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeviceObjId")
                        .HasColumnType("integer");

                    b.Property<int>("MagentaTonersUsed")
                        .HasColumnType("integer");

                    b.Property<int>("YellowTonersUsed")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeviceObjId");

                    b.ToTable("DailyToners");
                });

            modelBuilder.Entity("ApplicationCore.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId");

                    b.HasIndex("ContractId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ApplicationCore.Models.Contract", b =>
                {
                    b.HasOne("ApplicationCore.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceObjId");

                    b.HasOne("ApplicationCore.Models.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("ApplicationCore.Models.Employee", b =>
                {
                    b.HasOne("ApplicationCore.Models.Contract", null)
                        .WithMany("Employees")
                        .HasForeignKey("ContractId");

                    b.HasOne("ApplicationCore.Models.Owner", "Owner")
                        .WithMany("Employees")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("ApplicationCore.Models.Reports.DailyContadoresDataDevices", b =>
                {
                    b.HasOne("ApplicationCore.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceObjId");
                });

            modelBuilder.Entity("ApplicationCore.Models.Reports.DailyTonersDataDevices", b =>
                {
                    b.HasOne("ApplicationCore.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceObjId");
                });

            modelBuilder.Entity("ApplicationCore.Models.User", b =>
                {
                    b.HasOne("ApplicationCore.Models.Contract", null)
                        .WithMany("UsersId")
                        .HasForeignKey("ContractId");
                });
#pragma warning restore 612, 618
        }
    }
}
